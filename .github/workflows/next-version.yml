on:
  workflow_call:
    inputs:
      release_type:
        description: "Type of release (patch, minor, major)"
        required: false
        default: "patch"
        type: string
    outputs:
      release:
        description: "The selected next release version"
        value: ${{ jobs.prepare.outputs.selected }}
      patch:
        description: "Next patch version"
        value: ${{ jobs.prepare.outputs.patch }}
      minor:
        description: "Next minor version"
        value: ${{ jobs.prepare.outputs.minor }}
      major:
        description: "Next major version"
        value: ${{ jobs.prepare.outputs.major }}

jobs:
  prepare:
    name: Prepare release
    runs-on: ubuntu-latest
    outputs:
      patch: ${{ steps.values.outputs.patch }}
      minor: ${{ steps.values.outputs.minor }}
      major: ${{ steps.values.outputs.major }}
      date: ${{ steps.values.outputs.date }}
      selected: ${{ steps.values.outputs.selected }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Required due to the weg Git works, without it this action won't be able to find any or the correct tags
      - name: "Get Previous tag"
        id: previoustag
        uses: "WyriHaximus/github-action-get-previous-tag@v1"
        with:
          fallback: 0.0.0 # Optional fallback tag to use when no tag can be found
      - name: "Get next minor version"
        id: semvers
        uses: "WyriHaximus/github-action-next-semvers@v1"
        with:
          version: ${{ steps.previoustag.outputs.tag }}
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
      - name: "Setting values"
        id: values
        run: |
          echo "patch=${{ steps.semvers.outputs.patch }}" >> $GITHUB_OUTPUT
          echo "minor=${{ steps.semvers.outputs.minor }}" >> $GITHUB_OUTPUT
          echo "major=${{ steps.semvers.outputs.major }}" >> $GITHUB_OUTPUT
          echo "date=$(date +'%d-%b-%Y')" >> $GITHUB_OUTPUT
          
          # Select version based on input parameter
          case "${{ inputs.release_type }}" in
            "patch")
              selected="${{ steps.semvers.outputs.patch }}"
              ;;
            "minor")
              selected="${{ steps.semvers.outputs.minor }}"
              ;;
            "major")
              selected="${{ steps.semvers.outputs.major }}"
              ;;
            *)
              selected="${{ steps.semvers.outputs.patch }}"
              ;;
          esac
          
          echo "selected=$selected" >> $GITHUB_OUTPUT
          echo "Selected release version: $selected"
